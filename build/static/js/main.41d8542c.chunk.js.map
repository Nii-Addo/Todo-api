{"version":3,"sources":["contexts/ThemeContext.jsx","contexts/AuthContext.jsx","contexts/FetchContext.jsx","styles/NavigationBar.js","styles/Button.js","components/NavBar.jsx","styles/Todo.js","components/Todo.jsx","components/TodoList.jsx","styles/NewTodo.js","components/NewTodo.jsx","styles/Home.js","pages/Home.jsx","util/Fetch.js","styles/FlowForm.js","pages/Signup.jsx","pages/Login.jsx","App.js","reportWebVitals.js","index.js"],"names":["ThemeContext","React","createContext","Provider","ThemeProvider","children","useState","theme","setTheme","color","backgroundColor","document","body","style","value","toggleTheme","AuthContext","AuthProvider","history","useHistory","token","localStorage","getItem","userInfo","expiresAt","JSON","parse","authState","setAuthState","setAuthInfo","setItem","stringify","authInfo","logout","removeItem","push","isAuthenticated","Date","getTime","FetchContext","FetchProvider","authContext","useContext","authAxios","axios","create","baseURL","process","interceptors","request","use","config","headers","Authorization","error","Promise","reject","response","code","status","console","log","NavBarWrapper","styled","div","ActionButton","button","props","primary","ThemeButton","LogoutButton","NavBar","themeContext","className","to","onClick","TodoWrapper","Todo","activity","_id","title","description","isComplete","setError","setSuccessMessage","id","type","disabled","checked","put","then","data","message","delete","TodoList","activities","setActivities","useEffect","a","get","catch","fetchActivities","length","map","TodoFormWrapper","NewTodo","setTitle","setDescription","action","name","placeholder","onChange","e","target","preventDefault","todoDto","post","HomeStyle","Home","successMessage","PublicFetch","Form","Signup","fullName","setFullName","email","setEmail","password","setPassword","passwordConfirmation","setPasswordConfirmation","redirectOnSignup","setRedirectOnSignup","Login","redirectOnLogin","setRedirectOnLogin","AppRoutes","exact","path","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"sOAEMA,EAAeC,IAAMC,gBACnBC,EAAaH,EAAbG,SAEFC,EAAgB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACZC,mBAAS,SADG,mBAC/BC,EAD+B,KACxBC,EADwB,KAOhCC,EAAkB,UAAVF,EAAoB,OAAS,OACrCG,EAA4B,UAAVH,EAAoB,OAAS,OAKrD,OAHAI,SAASC,KAAKC,MAAMJ,MAAQA,EAC5BE,SAASC,KAAKC,MAAMH,gBAAkBA,EAE/B,cAACP,EAAD,CAAUW,MAAO,CAAEP,QAAOQ,YAVb,WAClBP,EAAmB,UAAVD,EAAoB,OAAS,WASjC,SAA0CF,KCf7CW,EAAcd,0BACZC,EAAaa,EAAbb,SAEFc,EAAe,SAAC,GAAkB,IAAhBZ,EAAe,EAAfA,SAChBa,EAAUC,cAEVC,EAAQC,aAAaC,QAAQ,SAC7BC,EAAWF,aAAaC,QAAQ,YAChCE,EAAYH,aAAaC,QAAQ,aALF,EAOHhB,mBAAS,CACzCc,QACAI,YACAD,SAAUA,EAAWE,KAAKC,MAAMH,GAAY,KAVT,mBAO9BI,EAP8B,KAOnBC,EAPmB,KAa/BC,EAAc,SAAC,GAAoC,IAAlCT,EAAiC,EAAjCA,MAAOG,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,UACtCH,aAAaS,QAAQ,QAASV,GAC9BC,aAAaS,QAAQ,WAAYL,KAAKM,UAAUR,IAChDF,aAAaS,QAAQ,YAAaN,GAElCI,EAAa,CACXR,QACAG,WACAC,eAmBJ,OACE,cAAC,EAAD,CACEV,MAAO,CACLa,YACAC,aAAc,SAACI,GAAD,OAAcH,EAAYG,IACxCC,OApBS,WACbZ,aAAaa,WAAW,SACxBb,aAAaa,WAAW,YACxBb,aAAaa,WAAW,aACxBN,EAAa,IACbV,EAAQiB,KAAK,MAgBTC,gBAbkB,WACtB,SAAKT,EAAUP,QAAUO,EAAUH,aAG5B,IAAIa,MAAOC,UAAY,IAAOX,EAAUH,YAI/C,SAQGnB,K,iBCnDDkC,EAAerC,0BACbC,EAAaoC,EAAbpC,SAEFqC,EAAgB,SAAC,GAAkB,IAAhBnC,EAAe,EAAfA,SACjBoC,EAAcC,qBAAW1B,GAEzB2B,EAAYC,IAAMC,OAAO,CAC7BC,QAASC,8BA0BX,OAvBAJ,EAAUK,aAAaC,QAAQC,KAC7B,SAACC,GAEC,OADAA,EAAOC,QAAQC,cAAf,iBAAyCZ,EAAYd,UAAUP,OACxD+B,KAET,SAACG,GACC,OAAOC,QAAQC,OAAOF,MAI1BX,EAAUK,aAAaS,SAASP,KAC9B,SAACO,GACC,OAAOA,KAET,SAACH,GACC,IAAMI,EAAOJ,GAASA,EAAMG,SAAWH,EAAMG,SAASE,OAAS,EAI/D,OAHa,MAATD,GAAyB,MAATA,GAClBE,QAAQC,IAAI,aAAcH,GAErBH,QAAQC,OAAOF,MAKxB,cAAC,EAAD,CACExC,MAAO,CACL6B,aAFJ,SAKGtC,K,0zBCzCA,IAAMyD,EAAgBC,IAAOC,IAAV,K,koBCAnB,IAAMC,EAAeF,IAAOG,OAAV,KAQT,SAACC,GAAD,OAAYA,EAAMC,QAAU,UAAY,SAC7C,SAACD,GAAD,OAAYA,EAAMC,QAAU,QAAU,WAGpCC,EAAcN,IAAOG,OAAV,KAOXI,EAAeP,YAAOM,EAAPN,CAAH,KCsBVQ,EAnCA,SAACJ,GACd,IAAMK,EAAe9B,qBAAW1C,GAC1ByC,EAAcC,qBAAW1B,GAC/B,OACE,cAAC8C,EAAD,UACE,+BACE,oBAAIW,UAAU,QAAd,SACE,cAAC,IAAD,CAAMC,GAAG,IAAT,SACE,0CAGJ,sBAAKD,UAAU,QAAf,UACIhC,EAAYL,kBAUZ,cAACkC,EAAD,CAAcK,QAASlC,EAAYR,OAAnC,oBATA,qCACE,oBAAIwC,UAAU,GAAd,SACE,cAAC,IAAD,CAAMC,GAAG,SAAT,qBAEF,oBAAID,UAAU,GAAd,SACE,cAAC,IAAD,CAAMC,GAAG,UAAT,yBAMN,oBAAID,UAAU,MAAd,SACE,cAACJ,EAAD,CAAaM,QAASH,EAAazD,YAAnC,SAC0B,UAAvByD,EAAajE,MAAoB,YAAc,0B,8tDChCvD,IAAMqE,EAAcb,IAAOC,IAAV,KCqETa,EAlEF,SAACV,GACZ,IACMxB,EADeD,qBAAWH,GACDI,UAFT,EAG0BwB,EAAMW,SAA9CC,EAHc,EAGdA,IAAKC,EAHS,EAGTA,MAAOC,EAHE,EAGFA,YAAaC,EAHX,EAGWA,WACzBC,EAAgChB,EAAhCgB,SAAUC,EAAsBjB,EAAtBiB,kBA8BlB,OACE,eAACR,EAAD,WACE,sBAAKH,UAAU,OAAf,UACE,qBAAKA,UAAU,OAAf,SACE,uBACEY,GAAG,SACHC,KAAK,WACLC,UAAQ,EACRC,QAA6B,SAApB,UAAGN,OAGhB,6BAAKF,OAEP,4BAAIC,IACJ,sBAAKR,UAAU,UAAf,UACE,qBAAKA,UAAU,iBAAf,SACE,cAACR,EAAD,CACEG,SAAO,EACPO,QAhCS,WACjB,IACEhC,EAAU8C,IAAV,+BAAsCV,IAAOW,MAAK,SAACjC,GAAc,IACvDkC,EAASlC,EAATkC,KACRP,EAAkBO,EAAKC,SACvBT,EAAS,OAEX,MAAO7B,GAAQ,IACPqC,EAASrC,EAAMG,SAAfkC,KACRP,EAAkB,gBAClBD,EAASQ,EAAKC,WAuBRL,SAA8B,SAApB,UAAGL,GAHf,wBAQF,qBAAKT,UAAU,iBAAiBE,QApDnB,WACjB,IACEhC,EAAUkD,OAAV,sBAAgCd,IAAOW,MAAK,SAACjC,GAAc,IACjDkC,EAASlC,EAATkC,KACRP,EAAkBO,EAAKC,SACvBT,EAAS,OAEX,MAAO7B,GAAQ,IACPqC,EAASrC,EAAMG,SAAfkC,KACRP,EAAkB,gBAClBD,EAASQ,EAAKC,WA0CZ,SACE,cAAC3B,EAAD,8BCbK6B,EA/CE,SAAC3B,GAChB,IACMxB,EADeD,qBAAWH,GACDI,UAFL,EAGUrC,mBAAS,IAHnB,mBAGnByF,EAHmB,KAGPC,EAHO,KAIlBb,EAAgChB,EAAhCgB,SAAUC,EAAsBjB,EAAtBiB,kBAqBlB,OAnBAa,qBAAU,YACa,uCAAG,sBAAAC,EAAA,sEAChBvD,EACHwD,IAAI,gBACJT,MAAK,SAACjC,GAAc,IACXkC,EAASlC,EAATkC,KACRK,EAAcL,EAAKI,YACnBZ,EAAS,OAEViB,OAAM,SAAC9C,GAAW,IACTqC,EAASrC,EAAMG,SAAfkC,KACRR,EAASQ,EAAKC,SACdI,EAAc,OAXI,2CAAH,qDAerBK,KACC,IAGD,8BACyB,IAAtBN,EAAWO,OACV,mDAEA,8BACGP,EAAWQ,KAAI,SAACzB,GACf,OACE,cAAC,EAAD,CAEEA,SAAUA,EACVK,SAAUA,EACVC,kBAAmBA,GAHdN,EAASC,a,+2DCpCvB,IAAMyB,EAAkBzC,IAAOC,IAAV,KC+DbyC,EA7DC,SAACtC,GACf,IACMxB,EADeD,qBAAWH,GACDI,UAFN,EAGCrC,mBAAS,IAHV,mBAGlB0E,EAHkB,KAGX0B,EAHW,OAIapG,mBAAS,IAJtB,mBAIlB2E,EAJkB,KAIL0B,EAJK,KAKjBvB,EAAgCjB,EAAhCiB,kBAAmBD,EAAahB,EAAbgB,SAqB3B,OACE,eAACqB,EAAD,WACE,yDACA,sBAAMI,OAAO,GAAb,SACE,sBAAKnC,UAAU,YAAf,UACE,qBAAKA,UAAU,GAAf,SACE,uBACEa,KAAK,OACLuB,KAAK,QACLC,YAAY,QACZC,SAAU,SAACC,GAAD,OAAON,EAASM,EAAEC,OAAOnG,YAGvC,qBAAK2D,UAAU,GAAf,SACE,0BACEoC,KAAK,cACLC,YAAY,cACZC,SAAU,SAACC,GAAD,OAAOL,EAAeK,EAAEC,OAAOnG,YAG7C,8BACE,wBACEwE,KAAK,SACLb,UAAU,gBACVE,QA3CS,SAACqC,GACpBA,EAAEE,iBACF,IAAMC,EAAU,CACdnC,MAAOA,EACPC,YAAaA,GAEftC,EACGyE,KAAK,eAAgBD,GACrBzB,MAAK,SAACjC,GAAc,IACXkC,EAASlC,EAATkC,KACRP,EAAkBO,EAAKC,SACvBT,EAAS,OAEViB,OAAM,SAAC9C,GAAW,IACTqC,EAASrC,EAAMG,SAAfkC,KACRR,EAASQ,EAAKC,SACdR,EAAkB,QAwBd,+B,kYCjDL,IAAMiC,EAAYtD,IAAOC,IAAV,KC6BPsD,EAxBF,SAACnD,GACCzB,qBAAW1B,GAAxB,IADsB,EAEIV,mBAAS,IAFb,mBAEfgD,EAFe,KAER6B,EAFQ,OAGsB7E,mBAAS,IAH/B,mBAGfiH,EAHe,KAGCnC,EAHD,KAKtB,OACE,eAACiC,EAAD,WACE,qBAAK5C,UAAU,MAAf,SACE,cAAC,EAAD,MAEF,qBAAKA,UAAU,WAAf,SACE,cAAC,EAAD,CAASU,SAAUA,EAAUC,kBAAmBA,MAElD,sBAAKX,UAAU,WAAf,UACG8C,EAAiB,8BAAMA,IAAwB,KAC/CjE,EAAQ,8BAAMA,IAAe,QAEhC,qBAAKmB,UAAU,QAAf,SACE,cAAC,EAAD,CAAUW,kBAAmBA,EAAmBD,SAAUA,UCvB5DqC,EAAc5E,IAAMC,OAAO,CAC/BC,QAASC,+B,+xCCDJ,IAAM0E,EAAO1D,IAAOC,IAAV,KC2FF0D,EAtFA,SAACvD,GACd,IAAM1B,EAAcC,qBAAW1B,GADP,EAEQV,mBAAS,IAFjB,mBAEjBqH,EAFiB,KAEPC,EAFO,OAGEtH,mBAAS,IAHX,mBAGjBuH,EAHiB,KAGVC,EAHU,OAIQxH,mBAAS,IAJjB,mBAIjByH,EAJiB,KAIPC,EAJO,OAKgC1H,mBAAS,IALzC,mBAKjB2H,EALiB,KAKKC,EALL,OAMwB5H,oBAAS,GANjC,mBAMjB6H,EANiB,KAMCC,EAND,OAOE9H,mBAAS,IAPX,mBAOV6E,GAPU,aAQoB7E,mBAAS,IAR7B,mBAQD8E,GARC,WAiCxB,OACE,eAACqC,EAAD,WACGU,GAAoB,cAAC,IAAD,CAAUzD,GAAG,MAClC,mDACA,sBAAMkC,OAAO,GAAb,SACE,sBAAKnC,UAAU,YAAf,UACE,8BACE,uBACEa,KAAK,OACLuB,KAAK,WACLC,YAAY,WACZC,SAAU,SAACC,GAAD,OAAOY,EAAYZ,EAAEC,OAAOnG,YAG1C,8BACE,uBACEwE,KAAK,QACLuB,KAAK,QACLC,YAAY,QACZC,SAAU,SAACC,GAAD,OAAOc,EAASd,EAAEC,OAAOnG,YAGvC,8BACE,uBACEwE,KAAK,WACLuB,KAAK,WACLC,YAAY,WACZC,SAAU,SAACC,GAAD,OAAOgB,EAAYhB,EAAEC,OAAOnG,YAG1C,8BACE,uBACEwE,KAAK,WACLuB,KAAK,uBACLC,YAAY,oBACZC,SAAU,SAACC,GAAD,OAAOkB,EAAwBlB,EAAEC,OAAOnG,YAGtD,8BACE,wBACEwE,KAAK,SACLb,UAAU,gBACVE,QAjES,SAACqC,GACpBA,EAAEE,iBACF,IAAMC,EAAU,CACdQ,SAAUA,EACVE,MAAOA,EACPE,SAAUA,EACVE,qBAAsBA,GAExBT,EAAYJ,KAAK,kBAAmBD,GACjCzB,MAAK,SAACjC,GAAc,IACXkC,EAASlC,EAATkC,KACRlD,EAAYb,aAAa+D,GACzBP,EAAkBO,EAAKC,SACvBT,EAAS,IACTiD,GAAoB,MAErBhC,OAAM,SAAC9C,GAAW,IACTqC,EAASrC,EAAMG,SAAfkC,KACRR,EAASQ,EAAKC,SACdR,EAAkB,QA2Cd,+BCNGiD,EAlED,SAAClE,GACb,IAAM1B,EAAcC,qBAAW1B,GADR,EAEGV,mBAAS,IAFZ,mBAEhBuH,EAFgB,KAETC,EAFS,OAGSxH,mBAAS,IAHlB,mBAGhByH,EAHgB,KAGNC,EAHM,OAIuB1H,oBAAS,GAJhC,mBAIhBgI,EAJgB,KAICC,EAJD,OAKGjI,mBAAS,IALZ,mBAKT6E,GALS,aAMqB7E,mBAAS,IAN9B,mBAMA8E,GANA,WA6BvB,OACE,eAACqC,EAAD,WACGa,GAAmB,cAAC,IAAD,CAAU5D,GAAG,MACjC,uBAAMkC,OAAO,GAAb,UACE,uCACA,sBAAKnC,UAAU,YAAf,UACE,qBAAKA,UAAU,GAAf,SACE,uBACEa,KAAK,QACLuB,KAAK,QACLC,YAAY,QACZC,SAAU,SAACC,GAAD,OAAOc,EAASd,EAAEC,OAAOnG,YAGvC,qBAAK2D,UAAU,GAAf,SACE,uBACEa,KAAK,WACLuB,KAAK,WACLC,YAAY,WACZC,SAAU,SAACC,GAAD,OAAOgB,EAAYhB,EAAEC,OAAOnG,YAG1C,8BACE,wBACEwE,KAAK,SACLb,UAAU,gBACVE,QA/CS,SAACqC,GACpBA,EAAEE,iBACF,IAAMC,EAAU,CACdU,MAAOA,EACPE,SAAUA,GAEZP,EAAYJ,KAAK,eAAgBD,GAC9BzB,MAAK,SAACjC,GAAc,IACXkC,EAASlC,EAATkC,KACRlD,EAAYb,aAAa+D,GACzBP,EAAkBO,EAAKC,SACvBT,EAAS,IACToD,GAAmB,MAEpBnC,OAAM,SAAC9C,GAAW,IACTqC,EAASrC,EAAMG,SAAfkC,KACRR,EAASQ,EAAKC,SACdR,EAAkB,QA2Bd,gCClDNoD,G,MAAY,WAChB,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,UAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,SAAZ,SACE,cAAC,EAAD,aAqBKC,MAdf,WACE,OACE,qBAAKlE,UAAU,MAAf,SACE,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,aCrBGmE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpD,MAAK,YAAkD,IAA/CqD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF3I,SAAS4I,eAAe,SAM1BX,M","file":"static/js/main.41d8542c.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nconst ThemeContext = React.createContext();\nconst { Provider } = ThemeContext;\n\nconst ThemeProvider = ({ children }) => {\n  const [theme, setTheme] = useState(\"light\");\n\n  const toggleTheme = () => {\n    setTheme(theme === \"light\" ? \"dark\" : \"light\");\n  };\n\n  const color = theme === \"light\" ? \"#333\" : \"#FFF\";\n  const backgroundColor = theme === \"light\" ? \"#FFF\" : \"#333\";\n\n  document.body.style.color = color;\n  document.body.style.backgroundColor = backgroundColor;\n\n  return <Provider value={{ theme, toggleTheme }}>{children}</Provider>;\n};\n\nexport { ThemeContext, ThemeProvider };\n","import React, { createContext, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst AuthContext = createContext();\nconst { Provider } = AuthContext;\n\nconst AuthProvider = ({ children }) => {\n  const history = useHistory();\n\n  const token = localStorage.getItem(\"token\");\n  const userInfo = localStorage.getItem(\"userInfo\");\n  const expiresAt = localStorage.getItem(\"expiresAt\");\n\n  const [authState, setAuthState] = useState({\n    token,\n    expiresAt,\n    userInfo: userInfo ? JSON.parse(userInfo) : {},\n  });\n\n  const setAuthInfo = ({ token, userInfo, expiresAt }) => {\n    localStorage.setItem(\"token\", token);\n    localStorage.setItem(\"userInfo\", JSON.stringify(userInfo));\n    localStorage.setItem(\"expiresAt\", expiresAt);\n\n    setAuthState({\n      token,\n      userInfo,\n      expiresAt,\n    });\n  };\n\n  const logout = () => {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"userInfo\");\n    localStorage.removeItem(\"expiresAt\");\n    setAuthState({});\n    history.push(\"/\");\n  };\n\n  const isAuthenticated = () => {\n    if (!authState.token || !authState.expiresAt) {\n      return false;\n    }\n    return new Date().getTime() / 1000 < authState.expiresAt;\n  };\n\n  return (\n    <Provider\n      value={{\n        authState,\n        setAuthState: (authInfo) => setAuthInfo(authInfo),\n        logout,\n        isAuthenticated,\n      }}\n    >\n      {children}\n    </Provider>\n  );\n};\n\nexport { AuthContext, AuthProvider };\n","import React, { createContext, useContext } from \"react\";\nimport { AuthContext } from \"../contexts/AuthContext\";\nimport axios from \"axios\";\n\nconst FetchContext = createContext();\nconst { Provider } = FetchContext;\n\nconst FetchProvider = ({ children }) => {\n  const authContext = useContext(AuthContext);\n\n  const authAxios = axios.create({\n    baseURL: process.env.REACT_APP_API_AUTHENTICATED_URL,\n  });\n\n  authAxios.interceptors.request.use(\n    (config) => {\n      config.headers.Authorization = `Bearer ${authContext.authState.token}`;\n      return config;\n    },\n    (error) => {\n      return Promise.reject(error);\n    }\n  );\n\n  authAxios.interceptors.response.use(\n    (response) => {\n      return response;\n    },\n    (error) => {\n      const code = error && error.response ? error.response.status : 0;\n      if (code === 401 || code === 403) {\n        console.log(\"error code\", code);\n      }\n      return Promise.reject(error);\n    }\n  );\n\n  return (\n    <Provider\n      value={{\n        authAxios,\n      }}\n    >\n      {children}\n    </Provider>\n  );\n};\n\nexport { FetchContext, FetchProvider };\n","import styled from \"styled-components\";\n\nexport const NavBarWrapper = styled.div`\n  z-index: 1;\n  ul {\n    position: fixed;\n    top: 0;\n    width: 100%;\n    list-style-type: none;\n    margin: 0;\n    padding: 0;\n    overflow: hidden;\n    background-color: #333;\n    z-index: 1;\n  }\n\n  li a {\n    display: block;\n    color: white;\n    text-align: center;\n    padding: 14px 16px;\n    text-decoration: none;\n    align-self: center;\n  }\n\n  li a:hover:not(.active) {\n    background-color: #111;\n  }\n\n  .right {\n    float: right;\n    display: flex;\n    flex: wrap;\n  }\n\n  .brand {\n    float: left;\n    margin-left: 10rem;\n  }\n\n  h3 {\n    margin: 0;\n    font-size: 1.3rem;\n    font-weight: bold;\n    line-height: 1.6rem;\n  }\n\n  .btn {\n    align-self: center;\n    margin: 0.8rem;\n  }\n`;\n","import styled from \"styled-components\";\n\nexport const ActionButton = styled.button`\n  width: 7em;\n  height: 3rem;\n  border: none;\n  background-color: green;\n  padding: 0.1rem;\n  font-size: 1.3rem;\n  cursor: pointer;\n  background: ${(props) => (props.primary ? \"#fcefee\" : \"red\")};\n  color: ${(props) => (props.primary ? \"black\" : \"white\")};\n`;\n\nexport const ThemeButton = styled.button`\n  width: auto;\n  height: 2rem;\n  border: none;\n  font-size: 1.1rem;\n`;\n\nexport const LogoutButton = styled(ThemeButton)`\n  font-size: 1rem;\n  margin: 1rem;\n  background: transparent;\n  color: white;\n  cursor: pointer;\n  width: 6rem;\n\n  &:hover {\n    background: #fcefee;\n    color: black;\n  }\n`;\n","import React, { useContext } from \"react\";\nimport { NavBarWrapper } from \"../styles/NavigationBar\";\nimport { Link } from \"react-router-dom\";\nimport { ThemeContext } from \"../contexts/ThemeContext\";\nimport { AuthContext } from \"../contexts/AuthContext\";\nimport { ThemeButton } from \"../styles/Button\";\nimport { LogoutButton } from \"../styles/Button\";\n\nconst NavBar = (props) => {\n  const themeContext = useContext(ThemeContext);\n  const authContext = useContext(AuthContext);\n  return (\n    <NavBarWrapper>\n      <ul>\n        <li className=\"brand\">\n          <Link to=\"/\">\n            <h3>TODO</h3>\n          </Link>\n        </li>\n        <div className=\"right\">\n          {!authContext.isAuthenticated() ? (\n            <>\n              <li className=\"\">\n                <Link to=\"/login\">Login</Link>\n              </li>\n              <li className=\"\">\n                <Link to=\"/signup\">Signup</Link>\n              </li>\n            </>\n          ) : (\n            <LogoutButton onClick={authContext.logout}>Logout</LogoutButton>\n          )}\n          <li className=\"btn\">\n            <ThemeButton onClick={themeContext.toggleTheme}>\n              {themeContext.theme === \"light\" ? \"dark mode\" : \"light mode\"}\n            </ThemeButton>\n          </li>\n        </div>\n      </ul>\n    </NavBarWrapper>\n  );\n};\n\nexport default NavBar;\n","import styled from \"styled-components\";\n\nexport const TodoWrapper = styled.div`\n  width: 47%;\n  min-height: 5rem;\n  margin-bottom: 2rem;\n  padding: 0.5rem 2rem;\n  background-color: #c5e3f6;\n  line-height: 2rem;\n\n  .task {\n    display: flex;\n    flex: wrap;\n\n    /* CHECKBOX STYLES */\n    .c-cb {\n      box-sizing: border-box;\n      font-family: Arial, sans-serif;\n      -webkit-font-smoothing: antialiased;\n      font-weight: 400;\n      font-size: 1.6rem;\n      line-height: 1.25;\n      min-height: 44px;\n      clear: left;\n    }\n\n    .c-cb > input[type=\"checkbox\"] {\n      box-sizing: border-box;\n      top: -2px;\n      left: -2px;\n      width: 30px;\n      height: 30px;\n    }\n    .c-cb > input[type=\"checkbox\"] {\n      -webkit-font-smoothing: antialiased;\n      cursor: pointer;\n      z-index: 1;\n      margin: 0;\n    }\n\n    .c-cb > input[type=\"checkbox\"]:focus + label::before {\n      border-width: 4px;\n      outline: 3px dashed #228bec;\n    }\n\n    .c-cb > label::after {\n      box-sizing: content-box;\n      content: \"\";\n      position: absolute;\n      top: 11px;\n      left: 9px;\n      width: 18px;\n      height: 7px;\n      transform: rotate(-45deg);\n      border: solid;\n      border-width: 0 0 5px 5px;\n      border-top-color: transparent;\n      opacity: 0;\n      background: transparent;\n    }\n    .c-cb > input[type=\"checkbox\"]:checked + label::after {\n      opacity: 1;\n    }\n  }\n  h3 {\n    margin-top: 0;\n    margin-left: 0.5rem;\n    text-transform: capitalize;\n    font-size: 1.6rem;\n  }\n\n  p {\n    margin-top: 0;\n    max-height: 3rem;\n  }\n\n  .actions {\n    display: flex;\n    flex: wrap;\n\n    .actions-button {\n      margin-right: 2rem;\n    }\n  }\n`;\n","import React, { useContext } from \"react\";\nimport { TodoWrapper } from \"../styles/Todo\";\nimport { ActionButton } from \"../styles/Button\";\nimport { FetchContext } from \"../contexts/FetchContext\";\n\nconst Todo = (props) => {\n  const fetchContext = useContext(FetchContext);\n  const authAxios = fetchContext.authAxios;\n  const { _id, title, description, isComplete } = props.activity;\n  const { setError, setSuccessMessage } = props;\n\n  const deleteTodo = () => {\n    try {\n      authAxios.delete(`/activities/${_id}`).then((response) => {\n        const { data } = response;\n        setSuccessMessage(data.message);\n        setError(\"\");\n      });\n    } catch (error) {\n      const { data } = error.response;\n      setSuccessMessage(\"data.message\");\n      setError(data.message);\n    }\n  };\n\n  const saveEdited = () => {\n    try {\n      authAxios.put(`/activities/complete/${_id}`).then((response) => {\n        const { data } = response;\n        setSuccessMessage(data.message);\n        setError(\"\");\n      });\n    } catch (error) {\n      const { data } = error.response;\n      setSuccessMessage(\"data.message\");\n      setError(data.message);\n    }\n  };\n\n  return (\n    <TodoWrapper>\n      <div className=\"task\">\n        <div className=\"c-cb\">\n          <input\n            id=\"todo-2\"\n            type=\"checkbox\"\n            disabled\n            checked={`${isComplete}` === \"true\"}\n          />\n        </div>\n        <h3>{title}</h3>\n      </div>\n      <p>{description}</p>\n      <div className=\"actions\">\n        <div className=\"actions-button\">\n          <ActionButton\n            primary\n            onClick={saveEdited}\n            disabled={`${isComplete}` === \"true\"}\n          >\n            complete\n          </ActionButton>\n        </div>\n        <div className=\"actions-button\" onClick={deleteTodo}>\n          <ActionButton>delete</ActionButton>\n        </div>\n      </div>\n    </TodoWrapper>\n  );\n};\n\nexport default Todo;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport Todo from \"../components/Todo\";\nimport { FetchContext } from \"../contexts/FetchContext\";\n\nconst TodoList = (props) => {\n  const fetchContext = useContext(FetchContext);\n  const authAxios = fetchContext.authAxios;\n  const [activities, setActivities] = useState([]);\n  const { setError, setSuccessMessage } = props;\n\n  useEffect(() => {\n    const fetchActivities = async () => {\n      await authAxios\n        .get(\"/activities/\")\n        .then((response) => {\n          const { data } = response;\n          setActivities(data.activities);\n          setError(\"\");\n        })\n        .catch((error) => {\n          const { data } = error.response;\n          setError(data.message);\n          setActivities([]);\n        });\n    };\n\n    fetchActivities();\n  }, []);\n\n  return (\n    <div>\n      {activities.length === 0 ? (\n        <div>No todo item yet</div>\n      ) : (\n        <div>\n          {activities.map((activity) => {\n            return (\n              <Todo\n                key={activity._id}\n                activity={activity}\n                setError={setError}\n                setSuccessMessage={setSuccessMessage}\n              />\n            );\n          })}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TodoList;\n","import styled from \"styled-components\";\n\nexport const TodoFormWrapper = styled.div`\n  width: 44%;\n  height: 17rem;\n  position: fixed;\n  align-items: center;\n  padding: 0.5rem;\n  border: 0.5px solid grey;\n  border-radius: 7px;\n  z-index: 1;\n  background: white;\n\n  .form-card {\n    background: white;\n    border: 0 none;\n    border-radius: 0px;\n    padding: 20px 30px 20px 30px;\n    box-sizing: border-box;\n    width: 94%;\n    margin: 0 3% 20px 3%;\n    position: relative;\n  }\n\n  h1 {\n    margin: 0.2rem 3rem;\n  }\n\n  fieldset {\n    background: white;\n    border: 0 none;\n    border-radius: 0.5rem;\n    box-sizing: border-box;\n    width: 100%;\n    margin: 0;\n    padding-bottom: 20px;\n    position: relative;\n  }\n\n  fieldset:not(:first-of-type) {\n    display: none;\n  }\n\n  fieldset .form-card {\n    text-align: left;\n    color: #9e9e9e;\n  }\n\n  input,\n  textarea {\n    padding: 0px 8px 4px 8px;\n    border: none;\n    border-bottom: 1px solid #ccc;\n    border-radius: 0px;\n    margin-bottom: 25px;\n    margin-top: 2px;\n    width: 100%;\n    box-sizing: border-box;\n    font-family: montserrat;\n    color: #2c3e50;\n    font-size: 16px;\n    letter-spacing: 1px;\n  }\n\n  input:focus,\n  textarea:focus {\n    -moz-box-shadow: none !important;\n    -webkit-box-shadow: none !important;\n    box-shadow: none !important;\n    border: none;\n    font-weight: bold;\n    border-bottom: 2px solid skyblue;\n    outline-width: 0;\n  }\n\n  .action-button {\n    width: 100px;\n    background: skyblue;\n    font-weight: bold;\n    font-size: 1.2rem;\n    color: black;\n    border: 0 none;\n    border-radius: 0px;\n    cursor: pointer;\n    padding: 10px 5px;\n    margin: 10px 5px;\n  }\n\n  .action-button:hover,\n  .action-button:focus {\n    box-shadow: 0 0 0 2px white, 0 0 0 3px skyblue;\n  }\n\n  .form-div {\n    margin: 0.2rem;\n    align-items: center;\n  }\n`;\n","import React, { useState, useContext } from \"react\";\nimport { TodoFormWrapper } from \"../styles/NewTodo\";\nimport { FetchContext } from \"../contexts/FetchContext\";\n\nconst NewTodo = (props) => {\n  const fetchContext = useContext(FetchContext);\n  const authAxios = fetchContext.authAxios;\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const { setSuccessMessage, setError } = props;\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    const todoDto = {\n      title: title,\n      description: description,\n    };\n    authAxios\n      .post(\"/activities/\", todoDto)\n      .then((response) => {\n        const { data } = response;\n        setSuccessMessage(data.message);\n        setError(\"\");\n      })\n      .catch((error) => {\n        const { data } = error.response;\n        setError(data.message);\n        setSuccessMessage(\"\");\n      });\n  };\n  return (\n    <TodoFormWrapper>\n      <h1>What do you have doing?</h1>\n      <form action=\"\">\n        <div className=\"form-card\">\n          <div className=\"\">\n            <input\n              type=\"text\"\n              name=\"title\"\n              placeholder=\"title\"\n              onChange={(e) => setTitle(e.target.value)}\n            />\n          </div>\n          <div className=\"\">\n            <textarea\n              name=\"description\"\n              placeholder=\"description\"\n              onChange={(e) => setDescription(e.target.value)}\n            ></textarea>\n          </div>\n          <div>\n            <button\n              type=\"submit\"\n              className=\"action-button\"\n              onClick={handleSubmit}\n            >\n              Submit\n            </button>\n          </div>\n        </div>\n      </form>\n    </TodoFormWrapper>\n  );\n};\n\nexport default NewTodo;\n","import styled from \"styled-components\";\n\nexport const HomeStyle = styled.div`\n  width: 100%;\n  min-height: 100%;\n\n  .nav {\n    z-index: 1;\n  }\n\n  .new-todo {\n    position: relative;\n    left: 28rem;\n    margin-top: 0;\n    top: 4rem;\n    z-index: 1;\n  }\n\n  .messages {\n  }\n\n  .todos {\n    position: relative;\n    top: 20rem;\n    left: 22rem;\n    padding: 5rem 6rem;\n  }\n`;\n","import React, { useState, useContext } from \"react\";\nimport NavBar from \"../components/NavBar\";\nimport TodoList from \"../components/TodoList\";\nimport NewTodo from \"../components/NewTodo\";\nimport { AuthContext } from \"../contexts/AuthContext\";\nimport { HomeStyle } from \"../styles/Home\";\n\nconst Home = (props) => {\n  const auth = useContext(AuthContext);\n  const [error, setError] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(\"\");\n\n  return (\n    <HomeStyle>\n      <div className=\"nav\">\n        <NavBar />\n      </div>\n      <div className=\"new-todo\">\n        <NewTodo setError={setError} setSuccessMessage={setSuccessMessage} />\n      </div>\n      <div className=\"messages\">\n        {successMessage ? <div>{successMessage}</div> : null}\n        {error ? <div>{error}</div> : null}\n      </div>\n      <div className=\"todos\">\n        <TodoList setSuccessMessage={setSuccessMessage} setError={setError} />\n      </div>\n    </HomeStyle>\n  );\n};\n\nexport default Home;\n","import axios from \"axios\";\n\nconst PublicFetch = axios.create({\n  baseURL: process.env.REACT_APP_API_PUBLIC_URL,\n});\n\nexport { PublicFetch };\n","import styled from \"styled-components\";\n\nexport const Form = styled.div`\n  min-height: 10rem;\n  width: 40%;\n  position: relative;\n  left: 20rem;\n  top: 5rem;\n  align-items: center;\n  padding: 1rem;\n  border: 0.5px solid grey;\n  border-radius: 7px;\n  z-index: 1;\n  background: white;\n\n  h4 {\n    font-size: 2rem;\n    font-weight: bold;\n    line-height: 1.5rem;\n  }\n\n  input {\n    padding: 0px 8px 4px 8px;\n    border: none;\n    border-bottom: 1px solid #ccc;\n    border-radius: 0px;\n    margin-bottom: 25px;\n    margin-top: 2px;\n    width: 100%;\n    box-sizing: border-box;\n    font-family: montserrat;\n    color: #2c3e50;\n    font-size: 16px;\n    letter-spacing: 1px;\n  }\n\n  input:focus {\n    -moz-box-shadow: none !important;\n    -webkit-box-shadow: none !important;\n    box-shadow: none !important;\n    border: none;\n    font-weight: bold;\n    border-bottom: 2px solid skyblue;\n    outline-width: 0;\n  }\n\n  .action-button {\n    width: 100px;\n    background: #17b978;\n    font-weight: bold;\n    font-size: 1.2rem;\n    color: black;\n    border: 0 none;\n    border-radius: 0px;\n    cursor: pointer;\n    padding: 10px 5px;\n    margin: 10px 5px;\n  }\n\n  .action-button:hover,\n  .action-button:focus {\n    box-shadow: 0 0 0 2px white, 0 0 0 3px skyblue;\n  }\n`;\n","import React, { useState, useContext } from \"react\";\nimport { TodoFormWrapper } from \"../styles/NewTodo\";\nimport { PublicFetch } from \"../util/Fetch\";\nimport { AuthContext } from \"../contexts/AuthContext\";\nimport { Form } from \"../styles/FlowForm\";\nimport { Redirect } from \"react-router-dom\";\n\nconst Signup = (props) => {\n  const authContext = useContext(AuthContext);\n  const [fullName, setFullName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordConfirmation, setPasswordConfirmation] = useState(\"\");\n  const [redirectOnSignup, setRedirectOnSignup] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(\"\");\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    const todoDto = {\n      fullName: fullName,\n      email: email,\n      password: password,\n      passwordConfirmation: passwordConfirmation,\n    };\n    PublicFetch.post(\"/users/register\", todoDto)\n      .then((response) => {\n        const { data } = response;\n        authContext.setAuthState(data);\n        setSuccessMessage(data.message);\n        setError(\"\");\n        setRedirectOnSignup(true);\n      })\n      .catch((error) => {\n        const { data } = error.response;\n        setError(data.message);\n        setSuccessMessage(\"\");\n      });\n  };\n\n  return (\n    <Form>\n      {redirectOnSignup && <Redirect to=\"/\" />}\n      <h1>Signup to do more</h1>\n      <form action=\"\">\n        <div className=\"form-card\">\n          <div>\n            <input\n              type=\"text\"\n              name=\"fullName\"\n              placeholder=\"fullName\"\n              onChange={(e) => setFullName(e.target.value)}\n            />\n          </div>\n          <div>\n            <input\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"email\"\n              onChange={(e) => setEmail(e.target.value)}\n            />\n          </div>\n          <div>\n            <input\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"password\"\n              onChange={(e) => setPassword(e.target.value)}\n            />\n          </div>\n          <div>\n            <input\n              type=\"password\"\n              name=\"passwordConfirmation\"\n              placeholder=\"confirm password \"\n              onChange={(e) => setPasswordConfirmation(e.target.value)}\n            />\n          </div>\n          <div>\n            <button\n              type=\"submit\"\n              className=\"action-button\"\n              onClick={handleSubmit}\n            >\n              Submit\n            </button>\n          </div>\n        </div>\n      </form>\n    </Form>\n  );\n};\n\nexport default Signup;\n","import React, { useState, useContext } from \"react\";\nimport { TodoFormWrapper } from \"../styles/NewTodo\";\nimport { PublicFetch } from \"../util/Fetch\";\nimport { Form } from \"../styles/FlowForm\";\nimport { AuthContext } from \"../contexts/AuthContext\";\nimport { Redirect } from \"react-router-dom\";\n\nconst Login = (props) => {\n  const authContext = useContext(AuthContext);\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [redirectOnLogin, setRedirectOnLogin] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(\"\");\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    const todoDto = {\n      email: email,\n      password: password,\n    };\n    PublicFetch.post(\"/users/login\", todoDto)\n      .then((response) => {\n        const { data } = response;\n        authContext.setAuthState(data);\n        setSuccessMessage(data.message);\n        setError(\"\");\n        setRedirectOnLogin(true);\n      })\n      .catch((error) => {\n        const { data } = error.response;\n        setError(data.message);\n        setSuccessMessage(\"\");\n      });\n  };\n\n  return (\n    <Form>\n      {redirectOnLogin && <Redirect to=\"/\" />}\n      <form action=\"\">\n        <h4>Login</h4>\n        <div className=\"form-card\">\n          <div className=\"\">\n            <input\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"email\"\n              onChange={(e) => setEmail(e.target.value)}\n            />\n          </div>\n          <div className=\"\">\n            <input\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"password\"\n              onChange={(e) => setPassword(e.target.value)}\n            />\n          </div>\n          <div>\n            <button\n              type=\"submit\"\n              className=\"action-button\"\n              onClick={handleSubmit}\n            >\n              Submit\n            </button>\n          </div>\n        </div>\n      </form>\n    </Form>\n  );\n};\n\nexport default Login;\n","import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ThemeProvider } from \"./contexts/ThemeContext\";\nimport { AuthProvider } from \"./contexts/AuthContext\";\nimport { FetchProvider } from \"./contexts/FetchContext\";\nimport Home from \"./pages/Home\";\nimport Signup from \"./pages/Signup\";\nimport Login from \"./pages/Login\";\nimport \"./App.css\";\n\nconst AppRoutes = () => {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n        <Route path=\"/signup\">\n          <Signup />\n        </Route>\n        <Route path=\"/login\">\n          <Login />\n        </Route>\n      </Switch>\n    </Router>\n  );\n};\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <AuthProvider>\n        <FetchProvider>\n          <ThemeProvider>\n            <AppRoutes />\n          </ThemeProvider>\n        </FetchProvider>\n      </AuthProvider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}